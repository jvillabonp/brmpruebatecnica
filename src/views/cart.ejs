<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <title>BRM Prueba técnica</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Raleway:wght@600;800&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="https://themewagon.github.io/fruitables/lib/lightbox/css/lightbox.min.css" rel="stylesheet">
    <link href="https://themewagon.github.io/fruitables/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="https://themewagon.github.io/fruitables/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="https://themewagon.github.io/fruitables/css/style.css" rel="stylesheet">
</head>

<body>
    <div id="app">
        <!-- Spinner Start -->
        <div id="spinner" class="show w-100 vh-100 bg-white position-fixed translate-middle top-50 start-50  d-flex align-items-center justify-content-center">
            <div class="spinner-grow text-primary" role="status"></div>
        </div>
        <!-- Spinner End -->

        <!-- Navbar start -->
        <div class="container-fluid fixed-top">
            <div class="container topbar bg-primary d-none d-lg-block">
                <div class="d-flex justify-content-between">
                    <div class="top-info ps-2">
                        <small class="me-3"><i class="fas fa-map-marker-alt me-2 text-secondary"></i> <a href="#" class="text-white">123 Street, New York</a></small>
                        <small class="me-3"><i class="fas fa-envelope me-2 text-secondary"></i><a href="#" class="text-white">Email@Example.com</a></small>
                    </div>
                    <div class="top-link pe-2">
                        <a href="#" class="text-white"><small class="text-white mx-2">Privacy Policy</small>/</a>
                        <a href="#" class="text-white"><small class="text-white mx-2">Terms of Use</small>/</a>
                        <a href="#" class="text-white"><small class="text-white ms-2">Sales and Refunds</small></a>
                    </div>
                </div>
            </div>
            <div class="container px-0">
                <nav class="navbar navbar-light bg-white navbar-expand-xl">
                    <a href="/" class="navbar-brand"><h1 class="text-primary display-6">BRM</h1></a>
                    <button class="navbar-toggler py-2 px-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                        <span class="fa fa-bars text-primary"></span>
                    </button>
                    <div class="collapse navbar-collapse bg-white" id="navbarCollapse">
                        <div class="navbar-nav mx-auto">
                            <a href="/" class="nav-item nav-link">Inicio</a>
                            <a href="/shop" class="nav-item nav-link">Comprar</a>
                        </div>
                        <div class="d-flex m-3 me-0">
                            <a href="#" class="position-relative me-4 my-auto">
                                <i class="fa fa-shopping-bag fa-2x"></i>
                                <span class="position-absolute bg-secondary rounded-circle d-flex align-items-center justify-content-center text-dark px-1" style="top: -5px; left: 15px; height: 20px; min-width: 20px;">{{ products.length }}</span>
                            </a>
                            <a href="/profile" class="my-auto">
                                <i class="fas fa-user fa-2x"></i>
                            </a>
                        </div>
                    </div>
                </nav>
            </div>
        </div>
        <!-- Navbar End -->

        <!-- Single Page Header start -->
        <div class="container-fluid page-header py-5">
            <h1 class="text-center text-white display-6">Carrito</h1>
        </div>
        <!-- Single Page Header End -->

        <!-- Cart Page Start -->
        <div class="container-fluid py-5">
            <div class="container py-5 text-center" v-if="products.length == 0">
                <h3 class="text-center">No hay nada en el carrito, añade productos</h3>
                <a href="/shop" class="btn btn-success">Añadir productos</a>
            </div>
            <div class="container py-5" v-else>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                            <th scope="col">Nombre</th>
                            <th scope="col">Precio</th>
                            <th scope="col">Cantidad</th>
                            <th scope="col">Total</th>
                            <th scope="col">Remover</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(product, index) in products">
                                <td>
                                    <p class="mb-0 mt-4">{{ product.name }}</p>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4">$ {{ new Intl.NumberFormat('es-CO').format(product.price) }}</p>
                                </td>
                                <td>
                                    <div class="input-group quantity mt-4" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-minus rounded-circle bg-light border" @click="decreaseItems(index)" v-bind:disabled="product.requiredQuantity <= 1">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>

                                        <span class="text-center border-0 mx-2 mt-1">{{ product.requiredQuantity }}</span>

                                        <div class="input-group-btn" v-if="product.requiredQuantity < 10 && product.quantity > product.requiredQuantity">
                                            <button class="btn btn-sm btn-plus rounded-circle bg-light border" @click="increaseItems(index)">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4">$ {{ new Intl.NumberFormat('es-CO').format(product.price * product.requiredQuantity) }}</p>
                                </td>
                                <td>
                                    <button class="btn btn-md rounded-circle bg-light border mt-4" @click="removeItem(index)" >
                                        <i class="fa fa-times text-danger"></i>
                                    </button>
                                </td>
                            
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="row g-4 justify-content-end">
                    <div class="col-8"></div>
                    <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                        <div class="bg-light rounded">
                            <div class="p-4">
                                <h1 class="display-6 mb-4">Carrito <span class="fw-normal">Total</span></h1>
                                <div class="d-flex justify-content-between mb-4">
                                    <h5 class="mb-0 me-4">Subtotal:</h5>
                                    <p class="mb-0">$ {{ getSubtotal() }}</p>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <h5 class="mb-0 me-4">Envío</h5>
                                    <div class="">
                                        <p class="mb-0">Valor de envío: $ 10.000</p>
                                    </div>
                                </div>
                                <p class="mb-0 text-end">Envío a casa.</p>
                            </div>
                            <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                                <h5 class="mb-0 ps-4 me-4">Total</h5>
                                <p class="mb-0 pe-4">$ {{ getTotal() }}</p>
                            </div>
                            <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" type="button" @click="shop()">Comprar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Cart Page End -->

        <!-- Copyright Start -->
        <div class="container-fluid copyright bg-dark py-4">
            <div class="container">
                <div class="row">
                    <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                        <span class="text-light"><a href="#"><i class="fas fa-copyright text-light me-2"></i>Your Site Name</a>, All right reserved.</span>
                    </div>
                    <div class="col-md-6 my-auto text-center text-md-end text-white">
                        Designed By <a class="border-bottom" href="https://htmlcodex.com">HTML Codex</a> Distributed By <a class="border-bottom" href="https://themewagon.com">ThemeWagon</a>
                    </div>
                </div>
            </div>
        </div>
        <!-- Copyright End -->

        <!-- Back to Top -->
        <a href="#" class="btn btn-primary border-3 border-primary rounded-circle back-to-top"><i class="fa fa-arrow-up"></i></a>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.16/dist/vue.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.5/axios.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://themewagon.github.io/fruitables/lib/easing/easing.min.js"></script>
    <script src="https://themewagon.github.io/fruitables/lib/waypoints/waypoints.min.js"></script>
    <script src="https://themewagon.github.io/fruitables/lib/lightbox/js/lightbox.min.js"></script>
    <script src="https://themewagon.github.io/fruitables/lib/owlcarousel/owl.carousel.min.js"></script>

    <!-- Template Javascript -->
    <script src="https://themewagon.github.io/fruitables/js/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        new Vue({
            el: '#app',
            data: {
                authToken: '',
                products: []
            },
            methods: {
                decreaseItems: function (index) {
                    this.products[index].requiredQuantity -= 1;
                    if (this.products[index].requiredQuantity <= 0) {
                        this.removeItem(index);
                    }

                    this.setStorage();
                },

                increaseItems: function (index) {
                    this.products[index].requiredQuantity += 1;
                    this.setStorage();
                },

                removeItem: function (index) {
                    this.products.splice(index, 1);
                    this.setStorage();
                },

                setStorage: function () {
                    localStorage.removeItem('cart');
                    localStorage.setItem('cart', JSON.stringify(this.products));
                },

                getSubtotal: function () {
                    let val = 0;
                    this.products.forEach((v) => val += (v.price * v.requiredQuantity));
                    return new Intl.NumberFormat('es-CO').format(val);
                },

                getTotal: function () {
                    let val = 0;
                    this.products.forEach((v) => val += (v.price * v.requiredQuantity));
                    return new Intl.NumberFormat('es-CO').format(val + 10000);
                },

                shop: function () {
                    if (!this.authToken) {
                        Swal.fire({
                            title: 'Inicia sesión para continuar',
                            icon: 'warning'
                        })
                        .then((res) => {
                            window.location = '/login';
                        });

                        return;
                    }

                    Swal.fire({
                        title: 'Cargando...',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        willOpen: () => Swal.showLoading()
                    });

                    let productsList = [];
                    this.products.forEach((v) => {
                        productsList.push({
                            productId: v.id,
                            quantity: v.requiredQuantity
                        });
                    });
                    axios.post('/api/purchases', {
                        products: productsList
                    }, {
                        headers: {
                            'Authorization': `Bearer ${this.authToken}`
                        }
                    })
                    .then((res) => {
                        this.products = [];
                        localStorage.removeItem('cart');
                        Swal.fire(res.data.message, '', 'success')
                            .then(() => {
                                window.location = '/profile';
                            });
                    })
                    .catch((err) => {
                        const { errors } = err.response.data;
                        let html = '<ul>';
                        switch (err.response.status) {
                            case 401:
                                localStorage.removeItem('authToken');
                                Swal.fire({
                                    title: 'Inicia sesión nuevamente',
                                    icon: 'warning'
                                })
                                .then((confirm) => {
                                    if (confirm.isConfirmed) {
                                        window.location = '/login';
                                    }
                                });
                                break;
                            case 403:
                                    for (error in errors) {
                                        errors[error].map((v) => html += `<li class="text-danger">${v}</li>`);
                                    }
                                    html += '</ul>';
                                    Swal.fire({
                                        title: err.response.data.message,
                                        html: html,
                                        icon: 'error'
                                    })
                                    .then(() => {
                                        const { product } = err.response.data;
                                        const index = this.products.findIndex((v) => v.id == product.id);
                                        if (index) {
                                            this.products[index].requiredQuantity = product.quantity;
                                            this.products[index].quantity = product.quantity;

                                            if (product.quantity <= 0) {
                                                Swal.fire({
                                                    title: `Se eliminará el producto '${this.products[index].name}' ya que se agotó el inventario`,
                                                    icon: 'warning'
                                                })
                                                .then(() => {
                                                    this.products.splice(index, 1);
                                                    this.setStorage();
                                                })
                                            }
                                        } else {
                                            this.setStorage();
                                        }
                                    });
                                break;
                            default:
                                for (error in errors) {
                                    errors[error].map((v) => html += `<li class="text-danger">${v}</li>`);
                                }
                                html += '</ul>';
                                Swal.fire({
                                    title: err.response.data.message,
                                    html: html,
                                    icon: 'error'
                                });
                                break;
                        }
                    })
                },
            },
            mounted() {
                const authToken = localStorage.getItem('authToken');
                this.authToken = authToken;
                const products = JSON.parse(localStorage.getItem('cart'));
                this.products = products || [];
            }
        });
    </script>
</body>
</html>